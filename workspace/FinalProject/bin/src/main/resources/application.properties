spring.main.banner-mode=off

#MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://final1zo.cugnbjvlzooc.ap-northeast-2.rds.amazonaws.com:3306/mydb?serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=final1zo

# JPA
# 스키마 생성, create: 기존  테이블이 있으면 삭제 후 생성, update: 변경될 부분만 반영
spring.jpa.hibernate.ddl-auto=update

# DDL 생성 시 데이터베이스 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=true

# api 호출 시 실행되는 sql문을 콘솔에 보여줄 것인가?
spring.jpa.show-sql=true

# 사용할 데이터베이스
spring.jpa.database=mysql

# mysql 상세지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# 부트는 기본적으로 hibernate 쪽으로 연결함
# JPA
# ì¤í¤ë§ ìì±, create: ê¸°ì¡´  íì´ë¸ì´ ìì¼ë©´ ì­ì  í ìì±, update: ë³ê²½ë  ë¶ë¶ë§ ë°ì
spring.jpa.hibernate.ddl-auto=update

# DDL ìì± ì ë°ì´í°ë² ì´ì¤ ê³ ì ì ê¸°ë¥ì ì¬ì©íëê°?
spring.jpa.generate-ddl=true

# api í¸ì¶ ì ì¤íëë sqlë¬¸ì ì½ìì ë³´ì¬ì¤ ê²ì¸ê°?하하하하핳하ㅏ
spring.jpa.show-sql=true

# ì¬ì©í  ë°ì´í°ë² ì´ì¤
spring.jpa.database=mysql

# mysql ìì¸ì§ì 
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
